load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "thriftbp",
    srcs = [
        "client_middlewares.go",
        "client_pool.go",
        "doc.go",
        "errors.go",
        "headers.go",
        "merger.go",
        "server.go",
        "server_middlewares.go",
        "tracing.go",
        "ttl_client.go",
    ],
    importpath = "github.com/reddit/baseplate.go/thriftbp",
    visibility = ["//visibility:public"],
    deps = [
        "//:baseplate_go",
        "//breakerbp",
        "//clientpool",
        "//ecinterface",
        "//errorsbp",
        "//internal/gen-go/reddit/baseplate",
        "//log",
        "//metricsbp",
        "//randbp",
        "//retrybp",
        "//tracing",
        "@com_github_apache_thrift//lib/go/thrift",
        "@com_github_avast_retry_go//:retry-go",
        "@com_github_go_kit_kit//metrics",
        "@com_github_opentracing_opentracing_go//:opentracing-go",
    ],
)

go_test(
    name = "thriftbp_test",
    size = "small",
    srcs = [
        "client_middlewares_test.go",
        "client_pool_test.go",
        "doc_client_test.go",
        "errors_test.go",
        "example_client_test.go",
        "example_server_test.go",
        "fixtures_test.go",
        "headers_test.go",
        "server_middlewares_test.go",
        "tracing_test.go",
        "ttl_client_test.go",
    ],
    embed = [":thriftbp"],
    deps = [
        "//:baseplate_go",
        "//ecinterface",
        "//internal/gen-go/reddit/baseplate",
        "//log",
        "//mqsend",
        "//retrybp",
        "//secrets",
        "//thriftbp/thrifttest",
        "//tracing",
        "@com_github_apache_thrift//lib/go/thrift",
        "@com_github_avast_retry_go//:retry-go",
        "@com_github_opentracing_opentracing_go//:opentracing-go",
    ],
)
